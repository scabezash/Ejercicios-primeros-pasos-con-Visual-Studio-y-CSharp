<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPj7AAD4+wAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAAAAAAuQAAAP8AAAD8AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAA/wAA
        ANcAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAC5AAAA/wAAAPwAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP0AAAD/AAAA1wAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAALYAAAD/AAAAewAAABkAAAArAAAAKAAA
        ACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAALAAAABkAAACXAAAA/wAA
        AKgAAAAOAAAAZAAAAP8AAADVAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAAAAAAtgAAAP8AAABjAAAAAAAA
        AAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAA
        AIQAAAD/AAAAmAAAAAAAAABHAAAA/wAAANUAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAC1AAAA/wAA
        AGIAAAAAAAAABQAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAA
        AAYAAAAAAAAAhQAAAP8AAACZAAAAAAAAAEkAAAD/AAAA1QAAAAAAAAAAAAAAAAAAAAAAAACMAAAApwAA
        AOQAAAD/AAAAxQAAAKsAAABaAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAAAAAACEAAAA/wAAAJgAAAAAAAAASAAAAP8AAADVAAAAAAAAAAAAAAAAAAAAAQAA
        ANgAAAD/AAAA/QAAAP8AAAD7AAAA/wAAAIkAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAIQAAAD/AAAAmAAAAAAAAABIAAAA/wAAANUAAAAAAAAAAAAA
        AAAAAAAAAAAAYwAAAHEAAADWAAAA/wAAAKgAAAByAAAAQAAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAhAAAAP8AAACYAAAAAAAAAEgAAAD/AAAA1QAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAALUAAAD/AAAAYgAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACEAAAA/wAAAJgAAAAAAAAASAAA
        AP8AAADVAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAAAAAAtwAAAP8AAABnAAAAAAAAAAgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAIQAAAD/AAAAmAAA
        AAAAAABIAAAA/wAAANUAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAC1AAAA/wAAAGIAAAAAAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAhAAA
        AP8AAACYAAAAAAAAAEgAAAD/AAAA1QAAAAAAAAAAAAAAAAAAAAAAAAA7AAAAPgAAAMgAAAD/AAAAiwAA
        ADwAAAAnAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AAAAAACEAAAA/wAAAJgAAAAAAAAASAAAAP8AAADVAAAAAAAAAAAAAAAAAAAAAAAAANgAAAD/AAAA/QAA
        AP8AAAD7AAAA/wAAAIkAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAEAAAAAAAAAIQAAAD/AAAAmAAAAAAAAABIAAAA/wAAANUAAAAAAAAAAAAAAAAAAAAAAAAAswAA
        ANkAAADxAAAA/wAAAOEAAADgAAAAcgAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQAAAAAAAAAhAAAAP8AAACYAAAAAAAAAEgAAAD/AAAA1QAAAAAAAAAAAAAAAAAA
        AAAAAAACAAAAAAAAALUAAAD/AAAAYwAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACEAAAA/wAAAJgAAAAAAAAASAAAAP8AAADVAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAAtQAAAP8AAABjAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAIQAAAD/AAAAmAAAAAAAAABIAAAA/wAA
        ANUAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAAC1AAAA/wAAAGMAAAAAAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAhAAAAP8AAACYAAAAAAAA
        AEgAAAD/AAAA1QAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAALUAAAD/AAAAYwAAAAAAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACEAAAA/wAA
        AJgAAAAAAAAASAAAAP8AAADVAAAAAAAAAAAAAAAAAAAAAAAAALMAAADZAAAA8QAAAP8AAADhAAAA4AAA
        AHIAAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAA
        AIQAAAD/AAAAmAAAAAAAAABIAAAA/wAAANUAAAAAAAAAAAAAAAAAAAAAAAAA2AAAAP8AAAD9AAAA/wAA
        APsAAAD/AAAAiQAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAAAAAAhAAAAP8AAACYAAAAAAAAAEgAAAD/AAAA1QAAAAAAAAAAAAAAAAAAAAAAAAA7AAAAPgAA
        AMgAAAD/AAAAiwAAADwAAAAnAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAAAAAACEAAAA/wAAAJgAAAAAAAAASAAAAP8AAADVAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAAAAAAtQAAAP8AAABiAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAIQAAAD/AAAAmAAAAAAAAABIAAAA/wAAANUAAAAAAAAAAAAA
        AAAAAAAAAAAACQAAAAAAAAC3AAAA/wAAAGcAAAAAAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAhAAAAP8AAACYAAAAAAAAAEgAAAD/AAAA1QAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAALUAAAD/AAAAYgAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAACEAAAA/wAAAJgAAAAAAAAASAAA
        AP8AAADVAAAAAAAAAAAAAAAAAAAAAAAAAGMAAABxAAAA1gAAAP8AAACoAAAAcgAAAEAAAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAIQAAAD/AAAAmAAA
        AAAAAABIAAAA/wAAANUAAAAAAAAAAAAAAAAAAAABAAAA2AAAAP8AAAD9AAAA/wAAAPsAAAD/AAAAiQAA
        AAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAhAAA
        AP8AAACYAAAAAAAAAEgAAAD/AAAA1QAAAAAAAAAAAAAAAAAAAAAAAACMAAAApwAAAOQAAAD/AAAAxQAA
        AKsAAABaAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AAAAAACEAAAA/wAAAJgAAAAAAAAASAAAAP8AAADVAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAtQAA
        AP8AAABiAAAAAAAAAAUAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAA
        AAIAAAAGAAAAAAAAAIUAAAD/AAAAmQAAAAAAAABJAAAA/wAAANUAAAAAAAAAAAAAAAAAAAAAAAAABQAA
        AAAAAAC2AAAA/wAAAGMAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAQAAAAAAAAAhAAAAP8AAACYAAAAAAAAAEcAAAD/AAAA1QAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAALYAAAD/AAAAewAAABkAAAArAAAAKAAAACgAAAAoAAAAKAAAACgAAAAoAAAAKAAA
        ACgAAAAoAAAAKAAAACgAAAAoAAAALAAAABkAAACXAAAA/wAAAKgAAAAOAAAAZAAAAP8AAADVAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAAAAAAuQAAAP8AAAD8AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD9AAAA/wAA
        ANcAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAC5AAAA/wAAAPwAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP0AAAD/AAAA1wAAAAAAAAAAkAAAA5AAAAOQAAADkX/6I5EAAiPAX/ojgF/6I8Bf+iORf/ojkV/6I5F/
        +iOAX/ojgF/6I8Bf+iORf/ojkX/6I5F/+iORf/ojwF/6I4Bf+iOAX/ojkX/6I5Ff+iORf/ojwF/6I4Bf
        +iPAX/ojkQACI5F/+iOQAAADkAAAA5AAAAM=
</value>
  </data>
</root>